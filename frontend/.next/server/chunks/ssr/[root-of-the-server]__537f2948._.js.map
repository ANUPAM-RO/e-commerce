{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/ecommerce-nextjs-app/frontend/src/components/Layout.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Layout as AntLayout } from 'antd';\r\nimport Navbar from './Navbar';\r\n\r\nconst { Content } = AntLayout;\r\n\r\ninterface LayoutProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const Layout: React.FC<LayoutProps> = ({ children }) => {\r\n  return (\r\n    <AntLayout className=\"min-h-screen\">\r\n      <Navbar />\r\n      <Content className=\"p-6\">\r\n        {children}\r\n      </Content>\r\n    </AntLayout>\r\n  );\r\n}; "],"names":[],"mappings":";;;;AACA;AACA;;;;AAEA,MAAM,EAAE,OAAO,EAAE,GAAG,2KAAA,CAAA,SAAS;AAMtB,MAAM,SAAgC,CAAC,EAAE,QAAQ,EAAE;IACxD,qBACE,qKAAC,2KAAA,CAAA,SAAS;QAAC,WAAU;;0BACnB,qKAAC,qHAAA,CAAA,UAAM;;;;;0BACP,qKAAC;gBAAQ,WAAU;0BAChB;;;;;;;;;;;;AAIT","debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/ecommerce-nextjs-app/frontend/src/components/Cart.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Table, Button, message, Modal, Form, Input } from 'antd';\r\nimport { DeleteOutlined, ShoppingCartOutlined } from '@ant-design/icons';\r\n\r\nimport axios from 'axios';\r\nimport { useCart } from '@/context/CartContext';\r\nimport { useAuth } from '@/context/AuthContext';\r\n\r\nconst Cart: React.FC = () => {\r\n  const { cart, removeFromCart, clearCart } = useCart();\r\n  const { user } = useAuth();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n\r\n  const handleCheckout = async (values: any) => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // First, create or update customer\r\n      const customerData = {\r\n        ...values,\r\n        userId: user?.id\r\n      };\r\n\r\n      const customerResponse = await axios.post(\r\n        `${process.env.NEXT_PUBLIC_API_URL}/customers`,\r\n        customerData\r\n      );\r\n      \r\n      const customerId = customerResponse.data.id;\r\n\r\n      // Then create the order\r\n      const orderData = {\r\n        customerId,\r\n        items: cart.map(item => ({\r\n          productId: item.id,\r\n          quantity: item.quantity\r\n        }))\r\n      };\r\n\r\n      await axios.post(\r\n        `${process.env.NEXT_PUBLIC_API_URL}/orders`,\r\n        orderData\r\n      );\r\n      \r\n      message.success('Order placed successfully!');\r\n      clearCart();\r\n      setIsModalOpen(false);\r\n      form.resetFields();\r\n    } catch (error) {\r\n      console.error('Checkout error:', error);\r\n      message.error('Failed to place order. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Product',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Price',\r\n      dataIndex: 'price',\r\n      key: 'price',\r\n      render: (price: number) => `$${price}`,\r\n    },\r\n    {\r\n      title: 'Quantity',\r\n      dataIndex: 'quantity',\r\n      key: 'quantity',\r\n    },\r\n    {\r\n      title: 'Subtotal',\r\n      key: 'subtotal',\r\n      render: (record: any) => `$${(record.price * record.quantity)}`,\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (record: any) => (\r\n        <Button\r\n          type=\"text\"\r\n          danger\r\n          icon={<DeleteOutlined />}\r\n          onClick={() => removeFromCart(record.id)}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const total = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Shopping Cart</h1>\r\n      {cart.length === 0 ? (\r\n        <div className=\"text-center py-8\">\r\n          <ShoppingCartOutlined className=\"text-4xl text-gray-400\" />\r\n          <p className=\"mt-2 text-gray-500\">Your cart is empty</p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <Table\r\n            columns={columns}\r\n            dataSource={cart}\r\n            rowKey=\"id\"\r\n            pagination={false}\r\n          />\r\n          <div className=\"mt-4 text-right\">\r\n            <p className=\"text-xl font-bold\">\r\n              Total: ${total}\r\n            </p>\r\n            <Button\r\n              type=\"primary\"\r\n              size=\"large\"\r\n              onClick={() => setIsModalOpen(true)}\r\n              className=\"mt-4\"\r\n            >\r\n              Proceed to Checkout\r\n            </Button>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      <Modal\r\n        title=\"Enter Your Details\"\r\n        open={isModalOpen}\r\n        onCancel={() => {\r\n          setIsModalOpen(false);\r\n          form.resetFields();\r\n        }}\r\n        footer={null}\r\n      >\r\n        <Form\r\n          form={form}\r\n          layout=\"vertical\"\r\n          onFinish={handleCheckout}\r\n        >\r\n          <Form.Item\r\n            name=\"firstName\"\r\n            label=\"First Name\"\r\n            rules={[{ required: true, message: 'Please enter your first name' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"lastName\"\r\n            label=\"Last Name\"\r\n            rules={[{ required: true, message: 'Please enter your last name' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            rules={[\r\n              { required: true, message: 'Please enter your email' },\r\n              { type: 'email', message: 'Please enter a valid email' }\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"phone\"\r\n            label=\"Phone\"\r\n            rules={[{ required: true, message: 'Please enter your phone number' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"address\"\r\n            label=\"Address\"\r\n            rules={[{ required: true, message: 'Please enter your address' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"city\"\r\n            label=\"City\"\r\n            rules={[{ required: true, message: 'Please enter your city' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"state\"\r\n            label=\"State\"\r\n            rules={[{ required: true, message: 'Please enter your state' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"zipCode\"\r\n            label=\"ZIP Code\"\r\n            rules={[{ required: true, message: 'Please enter your ZIP code' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"country\"\r\n            label=\"Country\"\r\n            rules={[{ required: true, message: 'Please enter your country' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" loading={loading} block>\r\n              Place Order\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 472, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/ecommerce-nextjs-app/frontend/src/pages/cart.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Layout } from '@/components/Layout';\r\nimport Cart from '@/components/Cart';\r\n\r\nconst CartPage: React.FC = () => {\r\n  return (\r\n    <Layout>\r\n      <Cart />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default CartPage; "],"names":[],"mappings":";;;;AACA;AACA;;;;;;;;AAEA,MAAM,WAAqB;IACzB,qBACE,qKAAC,qHAAA,CAAA,SAAM;kBACL,cAAA,qKAAC,mHAAA,CAAA,UAAI;;;;;;;;;;AAGX;uCAEe","debugId":null}}]
}