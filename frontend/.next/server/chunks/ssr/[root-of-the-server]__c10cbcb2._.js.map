{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/ecommerce-nextjs-app/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport axios from 'axios';\r\n\r\ninterface AuthContextType {\r\n  isAuthenticated: boolean;\r\n  login: (token: string) => void;\r\n  logout: () => void;\r\n  loading: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport function AuthProvider({ children }: { children: ReactNode }) {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const validateToken = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Verify token with backend\r\n        await axios.get('http://localhost:3001/api/auth/verify', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        setIsAuthenticated(true);\r\n      } catch (error) {\r\n        // If token is invalid, clear it\r\n        localStorage.removeItem('token');\r\n        setIsAuthenticated(false);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    validateToken();\r\n  }, []);\r\n\r\n  const login = (token: string) => {\r\n    localStorage.setItem('token', token);\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setIsAuthenticated(false);\r\n    router.push('/login');\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-100 flex items-center justify-center\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, login, logout, loading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n} "],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;;;;;;AASA,MAAM,4BAAc,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS,aAAa,EAAE,QAAQ,EAA2B;IAChE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,SAAS,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,gBAAgB;YACpB,MAAM,QAAQ,aAAa,OAAO,CAAC;YACnC,IAAI,CAAC,OAAO;gBACV,WAAW;gBACX;YACF;YAEA,IAAI;gBACF,4BAA4B;gBAC5B,MAAM,0GAAA,CAAA,UAAK,CAAC,GAAG,CAAC,yCAAyC;oBACvD,SAAS;wBACP,eAAe,CAAC,OAAO,EAAE,OAAO;oBAClC;gBACF;gBACA,mBAAmB;YACrB,EAAE,OAAO,OAAO;gBACd,gCAAgC;gBAChC,aAAa,UAAU,CAAC;gBACxB,mBAAmB;YACrB,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG,EAAE;IAEL,MAAM,QAAQ,CAAC;QACb,aAAa,OAAO,CAAC,SAAS;QAC9B,mBAAmB;IACrB;IAEA,MAAM,SAAS;QACb,aAAa,UAAU,CAAC;QACxB,mBAAmB;QACnB,OAAO,IAAI,CAAC;IACd;IAEA,IAAI,SAAS;QACX,qBACE,qKAAC;YAAI,WAAU;sBACb,cAAA,qKAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,qBACE,qKAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAiB;YAAO;YAAQ;QAAQ;kBACpE;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/ecommerce-nextjs-app/frontend/src/context/CartContext.tsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\n\r\ninterface CartItem {\r\n  id: string;\r\n  name: string;\r\n  price: number;\r\n  quantity: number;\r\n  stock: number;\r\n}\r\n\r\ninterface CartContextType {\r\n  items: CartItem[];\r\n  addItem: (product: CartItem) => void;\r\n  removeItem: (id: string) => void;\r\n  updateQuantity: (id: string, quantity: number) => void;\r\n  clearCart: () => void;\r\n  total: number;\r\n}\r\n\r\nconst CartContext = createContext<CartContextType | undefined>(undefined);\r\n\r\nexport function CartProvider({ children }: { children: ReactNode }) {\r\n  const [items, setItems] = useState<CartItem[]>([]);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  // Load cart from localStorage on mount\r\n  useEffect(() => {\r\n    const savedCart = localStorage.getItem('cart');\r\n    if (savedCart) {\r\n      setItems(JSON.parse(savedCart));\r\n    }\r\n  }, []);\r\n\r\n  // Save cart to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('cart', JSON.stringify(items));\r\n    // Calculate total\r\n    const newTotal = items.reduce((sum, item) => sum + item.price * item.quantity, 0);\r\n    setTotal(newTotal);\r\n  }, [items]);\r\n\r\n  const addItem = (product: CartItem) => {\r\n    setItems(currentItems => {\r\n      const existingItem = currentItems.find(item => item.id === product.id);\r\n      if (existingItem) {\r\n        // Check if adding more would exceed stock\r\n        if (existingItem.quantity + 1 > product.stock) {\r\n          return currentItems;\r\n        }\r\n        return currentItems.map(item =>\r\n          item.id === product.id\r\n            ? { ...item, quantity: item.quantity + 1 }\r\n            : item\r\n        );\r\n      }\r\n      return [...currentItems, { ...product, quantity: 1 }];\r\n    });\r\n  };\r\n\r\n  const removeItem = (id: string) => {\r\n    setItems(currentItems => currentItems.filter(item => item.id !== id));\r\n  };\r\n\r\n  const updateQuantity = (id: string, quantity: number) => {\r\n    if (quantity < 1) return;\r\n    setItems(currentItems =>\r\n      currentItems.map(item => {\r\n        if (item.id === id) {\r\n          // Check if new quantity would exceed stock\r\n          if (quantity > item.stock) {\r\n            return item;\r\n          }\r\n          return { ...item, quantity };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setItems([]);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ items, addItem, removeItem, updateQuantity, clearCart, total }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useCart() {\r\n  const context = useContext(CartContext);\r\n  if (context === undefined) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n} "],"names":[],"mappings":";;;;;AAAA;;;AAmBA,MAAM,4BAAc,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS,aAAa,EAAE,QAAQ,EAA2B;IAChE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IACjD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,uCAAuC;IACvC,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY,aAAa,OAAO,CAAC;QACvC,IAAI,WAAW;YACb,SAAS,KAAK,KAAK,CAAC;QACtB;IACF,GAAG,EAAE;IAEL,gDAAgD;IAChD,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;QAC5C,kBAAkB;QAClB,MAAM,WAAW,MAAM,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,KAAK,GAAG,KAAK,QAAQ,EAAE;QAC/E,SAAS;IACX,GAAG;QAAC;KAAM;IAEV,MAAM,UAAU,CAAC;QACf,SAAS,CAAA;YACP,MAAM,eAAe,aAAa,IAAI,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK,QAAQ,EAAE;YACrE,IAAI,cAAc;gBAChB,0CAA0C;gBAC1C,IAAI,aAAa,QAAQ,GAAG,IAAI,QAAQ,KAAK,EAAE;oBAC7C,OAAO;gBACT;gBACA,OAAO,aAAa,GAAG,CAAC,CAAA,OACtB,KAAK,EAAE,KAAK,QAAQ,EAAE,GAClB;wBAAE,GAAG,IAAI;wBAAE,UAAU,KAAK,QAAQ,GAAG;oBAAE,IACvC;YAER;YACA,OAAO;mBAAI;gBAAc;oBAAE,GAAG,OAAO;oBAAE,UAAU;gBAAE;aAAE;QACvD;IACF;IAEA,MAAM,aAAa,CAAC;QAClB,SAAS,CAAA,eAAgB,aAAa,MAAM,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK;IACnE;IAEA,MAAM,iBAAiB,CAAC,IAAY;QAClC,IAAI,WAAW,GAAG;QAClB,SAAS,CAAA,eACP,aAAa,GAAG,CAAC,CAAA;gBACf,IAAI,KAAK,EAAE,KAAK,IAAI;oBAClB,2CAA2C;oBAC3C,IAAI,WAAW,KAAK,KAAK,EAAE;wBACzB,OAAO;oBACT;oBACA,OAAO;wBAAE,GAAG,IAAI;wBAAE;oBAAS;gBAC7B;gBACA,OAAO;YACT;IAEJ;IAEA,MAAM,YAAY;QAChB,SAAS,EAAE;IACb;IAEA,qBACE,qKAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAO;YAAS;YAAY;YAAgB;YAAW;QAAM;kBACzF;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/ecommerce-nextjs-app/frontend/src/context/RecentlyViewedContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\ninterface Product {\r\n  id: string;\r\n  name: string;\r\n  price: number;\r\n  image: string;\r\n  description: string;\r\n}\r\n\r\ninterface RecentlyViewedContextType {\r\n  recentlyViewed: Product[];\r\n  addToRecentlyViewed: (product: Product) => void;\r\n  clearRecentlyViewed: () => void;\r\n}\r\n\r\nconst RecentlyViewedContext = createContext<RecentlyViewedContextType | undefined>(undefined);\r\n\r\nconst MAX_RECENTLY_VIEWED = 10;\r\n\r\nexport function RecentlyViewedProvider({ children }: { children: React.ReactNode }) {\r\n  const [recentlyViewed, setRecentlyViewed] = useState<Product[]>([]);\r\n\r\n  useEffect(() => {\r\n    // Load recently viewed products from localStorage on mount\r\n    const stored = localStorage.getItem('recentlyViewed');\r\n    if (stored) {\r\n      try {\r\n        setRecentlyViewed(JSON.parse(stored));\r\n      } catch (error) {\r\n        console.error('Error parsing recently viewed products:', error);\r\n        localStorage.removeItem('recentlyViewed');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const addToRecentlyViewed = (product: Product) => {\r\n    setRecentlyViewed(prev => {\r\n      // Remove the product if it already exists\r\n      const filtered = prev.filter(p => p.id !== product.id);\r\n      // Add the new product to the beginning\r\n      const updated = [product, ...filtered].slice(0, MAX_RECENTLY_VIEWED);\r\n      // Save to localStorage\r\n      localStorage.setItem('recentlyViewed', JSON.stringify(updated));\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  const clearRecentlyViewed = () => {\r\n    setRecentlyViewed([]);\r\n    localStorage.removeItem('recentlyViewed');\r\n  };\r\n\r\n  return (\r\n    <RecentlyViewedContext.Provider value={{ recentlyViewed, addToRecentlyViewed, clearRecentlyViewed }}>\r\n      {children}\r\n    </RecentlyViewedContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useRecentlyViewed() {\r\n  const context = useContext(RecentlyViewedContext);\r\n  if (context === undefined) {\r\n    throw new Error('useRecentlyViewed must be used within a RecentlyViewedProvider');\r\n  }\r\n  return context;\r\n} "],"names":[],"mappings":";;;;;AAAA;;;AAgBA,MAAM,sCAAwB,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD,EAAyC;AAEnF,MAAM,sBAAsB;AAErB,SAAS,uBAAuB,EAAE,QAAQ,EAAiC;IAChF,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IAElE,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,2DAA2D;QAC3D,MAAM,SAAS,aAAa,OAAO,CAAC;QACpC,IAAI,QAAQ;YACV,IAAI;gBACF,kBAAkB,KAAK,KAAK,CAAC;YAC/B,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,2CAA2C;gBACzD,aAAa,UAAU,CAAC;YAC1B;QACF;IACF,GAAG,EAAE;IAEL,MAAM,sBAAsB,CAAC;QAC3B,kBAAkB,CAAA;YAChB,0CAA0C;YAC1C,MAAM,WAAW,KAAK,MAAM,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,QAAQ,EAAE;YACrD,uCAAuC;YACvC,MAAM,UAAU;gBAAC;mBAAY;aAAS,CAAC,KAAK,CAAC,GAAG;YAChD,uBAAuB;YACvB,aAAa,OAAO,CAAC,kBAAkB,KAAK,SAAS,CAAC;YACtD,OAAO;QACT;IACF;IAEA,MAAM,sBAAsB;QAC1B,kBAAkB,EAAE;QACpB,aAAa,UAAU,CAAC;IAC1B;IAEA,qBACE,qKAAC,sBAAsB,QAAQ;QAAC,OAAO;YAAE;YAAgB;YAAqB;QAAoB;kBAC/F;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/ecommerce-nextjs-app/frontend/src/pages/_app.tsx"],"sourcesContent":["import '../styles/globals.css';\r\nimport type { AppProps } from 'next/app';\r\nimport { AuthProvider } from '../context/AuthContext';\r\nimport { CartProvider } from '../context/CartContext';\r\nimport { RecentlyViewedProvider } from '../context/RecentlyViewedContext';\r\n\r\nexport default function MyApp({ Component, pageProps }: AppProps) {\r\n  return (\r\n    <AuthProvider>\r\n      <CartProvider>\r\n        <RecentlyViewedProvider>\r\n          <Component {...pageProps} />\r\n        </RecentlyViewedProvider>\r\n      </CartProvider>\r\n    </AuthProvider>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;;;;;;;;AAEe,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAY;IAC9D,qBACE,qKAAC,uHAAA,CAAA,eAAY;kBACX,cAAA,qKAAC,uHAAA,CAAA,eAAY;sBACX,cAAA,qKAAC,iIAAA,CAAA,yBAAsB;0BACrB,cAAA,qKAAC;oBAAW,GAAG,SAAS;;;;;;;;;;;;;;;;;;;;;AAKlC","debugId":null}}]
}